(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{212:function(n,s,e){"use strict";e.r(s);var t=e(28),a=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("this 的指向，要结合上下文，常见的三种方式：")]),n._v(" "),e("ol",[e("li",[n._v("普通函数中的 this 指向全局 global，浏览器中也就是指 window 对象")]),n._v(" "),e("li",[n._v("对象方法中的 this 指向调用该方法的对象")]),n._v(" "),e("li",[n._v("构造函数中的 this 指向生成的实例，同时 new 方式调用 call，bind，apply 无法改变 this 指向")])]),n._v(" "),e("p",[n._v("其他的方式如：call，bind，apply。this 指向传入的对象。 如箭头函数 this 指向定义时的 this，与调用方式无关。")]),n._v(" "),e("p",[e("strong",[n._v("1、普通函数中的 this")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function foo() {\n    this.name = 'ghc'\n}\n\nfoo()\nconsole.log(window.name)\n")])])]),e("p",[n._v("此处 this 指向 window，所以 window.name 会输出 ghc")]),n._v(" "),e("p",[e("strong",[n._v("2、对象方法中的 this")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var person = {\n    age: 23,\n    getAge: function () {\n        return this.age\n    }\n}\n\nconsole.log(person.getAge())\n")])])]),e("p",[n._v("此处 this 指向 person，所以 person.getAge() 会输出 23")]),n._v(" "),e("p",[e("strong",[n._v("3、构造函数中的 this")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function Person () {\n    this.name = 'ghc'\n    this.age = 23\n}\n\nvar person = new Person()\nconsole.log(person)\n")])])]),e("p",[n._v("此处 this 指向生成的实例 person，所以 person.name 会输出 ghc，person.age 会输出 23")]),n._v(" "),e("p",[e("strong",[n._v("4、call、bind、apply")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var name = 'wyz'\nvar age = 18\nvar person = {\n    name: 'ghc',\n    age: 23\n}\n\nfunction foo() {\n    return {\n        name: this.name,\n        age: this.age\n    }\n}\n\nconsole.log(foo())\nconsole.log(foo.call(person))\nconsole.log(foo.apply(person))\nconsole.log(foo.bind(person)())\n")])])]),e("p",[n._v("普通函数直接调用 this 指向 window，所以第一处输出的 name 是 wyz，age 是 18。 通过 call、apply、bind 改变 this 指向为传入的对象，所以输出的 name 是 ghc，age 是 23。")]),n._v(" "),e("p",[e("strong",[n._v("5、箭头函数中的 this")])]),n._v(" "),e("p",[n._v("箭头函数中的 this 对象，就是定义时所在的对象，而不是使用时所在的对象。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function foo() {\n    setTimeout(() => {\n        console.log('id:', this.id);\n    }, 100);\n}\n\nvar id = 21;\nfoo.call({ id: 42 });\n")])])]),e("p",[n._v("此处 this 为定义时的对象，也就是 { id: 42 }")])])}),[],!1,null,null,null);s.default=a.exports}}]);